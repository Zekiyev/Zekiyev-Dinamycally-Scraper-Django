# Generated by Django 4.1.4 on 2022-12-30 16:39

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Advertisements',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('room_count', models.BigIntegerField(blank=True, null=True)),
                ('area', models.DecimalField(blank=True, decimal_places=2, help_text='Sahə, m² ilə göstərilmişdir', max_digits=10, null=True)),
                ('area_of_land', models.DecimalField(blank=True, decimal_places=2, help_text='Torpaq sahəsi, sot ilə göstərilmişdir', max_digits=10, null=True)),
                ('name', models.CharField(help_text='Url ending', max_length=50)),
                ('full_cost', models.DecimalField(blank=True, decimal_places=2, help_text='AZN', max_digits=10, null=True)),
                ('cost_per_unit', models.DecimalField(blank=True, decimal_places=2, help_text='AZN/m²', max_digits=10, null=True)),
                ('location_width', models.DecimalField(blank=True, decimal_places=7, help_text='Longitude', max_digits=10, null=True)),
                ('location_height', models.DecimalField(blank=True, decimal_places=7, help_text='Latitude', max_digits=10, null=True)),
                ('type', models.BigIntegerField(choices=[(1, 'monthly rent'), (2, 'daily rent'), (3, 'sale'), (0, '##BUG##')])),
                ('have_government_deed', models.BooleanField(blank=True, null=True)),
                ('have_mortgage_support', models.BooleanField(blank=True, null=True)),
                ('building_stage_height', models.BigIntegerField(blank=True, null=True)),
                ('stage', models.BigIntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('view_count', models.BigIntegerField(blank=True, null=True)),
                ('advertisement_create_date', models.DateTimeField(blank=True, null=True)),
                ('advertisement_expire_date', models.DateTimeField(blank=True, null=True)),
                ('advertisement_deleted_date', models.DateTimeField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('building_type', models.BigIntegerField(choices=[(1, 'flat old constructed'), (2, 'flat new constructed'), (3, 'home / villa'), (4, 'garden'), (5, 'office'), (6, 'garage'), (7, 'object building'), (8, 'land'), (9, 'another'), (0, '##BUG##')])),
                ('admin_confirmation_status', models.BigIntegerField(blank=True, choices=[(1, 'initial'), (2, 'admin confirm'), (3, 'expired'), (4, 'other'), (0, '##BUG##')], null=True)),
                ('advertisement_type', models.BigIntegerField(choices=[(1, 'normal'), (2, 'upper'), (3, 'vip'), (4, 'premium'), (0, '##BUG##')])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('city_for_rel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='t2.city')),
            ],
        ),
        migrations.CreateModel(
            name='Township',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Township')),
                ('region_for_rel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='t2.region')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('company_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='company')),
                ('person_in_charge', models.CharField(max_length=255, verbose_name='person_in_charge')),
                ('phone_number', models.CharField(max_length=255, unique=True, verbose_name='phone_number')),
                ('user_type', models.BigIntegerField(choices=[(1, 'normal_seller'), (2, 'rieltor'), (3, 'agency'), (4, 'fake_user'), (5, 'another'), (0, '##BUG##')], default=4)),
                ('role', models.TextField(blank=True, null=True, verbose_name='role')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
